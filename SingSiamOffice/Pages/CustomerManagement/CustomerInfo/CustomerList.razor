@page "/customerlist/{b_id:int}/{cus_id:int?}"
@* <h3>CustomerList</h3> *@
@using Models
@using SingSiamOffice.Manage
@inject UserLoginService userLoginService
@using Blazored.LocalStorage
@inject ILocalStorageService localStorage
<Navbar2></Navbar2>
<!-- Content Start -->
<div class="content">
    <Header />

    <div class="container-fluid mt-4 mb-4">
        <div class="row">
            <div class="col-md-6 pb-3">
                <MudText Typo="Typo.h5" Style="@headertext"><img class="rounded-circle" src="img/icons/customer.svg" alt="" style="width:2rem;"> ข้อมูลลูกค้าประจำสาขา :@b_info.Code @b_info.BranchName | @b_info.BranchCode</MudText>
            </div>
            <div class="col-md-6 text-end">
                @* <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Size="Size.Large" Style="@buttoncolor1" @onclick="()=>addCustomer(b_id)">เพิ่มลูกค้า</MudButton> *@
             @*    <MudButton Variant="Variant.Outlined" Size="Size.Large" Color="Color.Error" @onclick="()=>goDeptConlection(b_id)">ติดตาม</MudButton>
                <MudButton Variant="Variant.Outlined" Size="Size.Large" Color="Color.Error" @onclick="()=>goBlacklist(b_id)">Blacklist</MudButton> *@
            </div>
        </div>
    </div>

    <div class="container-fluid mt-4 mb-4">
    <div class="card">
        <div class="card-body">
                <div class="row">
                    <div class="col-12 pb-3">
                        <MudText Typo="Typo.body1" Style="@headertext">ค้นหาข้อมูลลูกค้า</MudText>

                    </div>
                    <div class="col-lg-5 col-md-5  col-sm-12 pb-3">
                        <MudAutocomplete T="Customer" Label="กรอกเลขบัตรหรือชื่อที่ต้องการค้นหา" @bind-Value="selectCustomer" Margin="Margin.Dense" ToStringFunc="@(e=> e==null?null : $"{e.NatId} | {e.FullName}")" SearchFunc="@SearchValue" Variant="Variant.Outlined" />

                    </div>
                   
                    <div class="col-6 pb-3">
                        <MudStack Row="true" Spacing="1">
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Search" Size="Size.Large" Color="Color.Info" @onclick="()=> fillter()">ค้นหา</MudButton>
                            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Close" Size="Size.Large" Color="Color.Error" @onclick="()=> reset()">ล้างข้อมูล</MudButton>
                        </MudStack>

                    </div>
                </div>
        </div>
    </div>
       

    </div>

    <div class="container-fluid mt-4 mb-4">
      <div class="row">
            @if (list_customer.Count == 0)
            {
                <div class="col-12 text-center mt-5">
                    <h3>ยังไม่มีลูกค้าในสาขา</h3>
                </div>
            }
            @foreach (var data in list_customer_show)
            {
                  <div class="col-12">
                    <div class="mx-auto">


                        <div class="card mb-3">
                            <div class="row g-0">
                                <div class="col-md-2">
                                    <div class="card-body text-center">
                                        <img src="@data.CusImg" class="img-fluid rounded-start" alt="...">
                                    </div>

                                </div>
                                <div class="col-md-10">
                                    <div class="row">
                                        <div class="col-12">
                                            <div class="card-body">
                                                <div class="row">
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">เลขบัตรประจำตัวประชาชน</MudText>
                                                            <MudText Typo="Typo.body1">@data.NatId</MudText>
                                                        </MudStack>

                                                    </div>
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">ชื่อ - สกุล</MudText>
                                                            <MudText Typo="Typo.body1">@data.FullName</MudText>
                                                        </MudStack>
                                                    </div>
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">เบอร์โทรศัพท์</MudText>
                                                            <MudText Typo="Typo.body1">@data.Phone</MudText>
                                                        </MudStack>
                                                    </div>
                                                    <hr />
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">ที่อยู่</MudText>
                                                            <MudText Typo="Typo.body2">
                                                                @data.Address
                                                            </MudText>
                                                        </MudStack>
                                                    </div>
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">สถานะลูกค้า</MudText>
                                                            @if (CheckBlacklist(data.CustomerId))
                                                            {
                                                                <MudChip Variant="Variant.Text" Color="Color.Error">ติด Blacklist</MudChip>
                                                            }
                                                            else
                                                            {
                                                                <MudChip Variant="Variant.Text" Color="Color.Success">ปกติ</MudChip>
                                                               
                                                            }

                                                        </MudStack>
                                                    </div>
                                                    <div class="col-4 pb-3 text-center">
                                                        <MudStack>
                                                            <MudText Typo="Typo.body1" Style="@imporText">Link - map</MudText>
                                                            <a href="@data.LocationLink" target="_blank">ดูแผนที่</a>
                                                        </MudStack>
                                                    </div>
                                                    <div class="col-4 pb-3 text-center">
                                                      @*   <MudText Typo="Typo.body1" Style="@imporText">ลบข้อมูลลูกค้า</MudText> *@
                                                      @*   <MudButton Variant="Variant.Outlined"  Size="Size.Large" Style="@buttoncolor2" @onclick="()=>remove(data.CustomerId)"></MudButton> *@
                                                        <MudButton Variant="Variant.Outlined" DisableElevation="true" Color="Color.Error" @onclick="()=>remove(data.CustomerId)">ลบข้อมูลลูกค้า</MudButton>
                                                    
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <div class="card-body">
                                                <MudStack Row="true">
                                                    <MudText Typo="Typo.body1">เมนูจัดการ</MudText>
                                                    <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Edit" Size="Size.Large" Color="Color.Error" @onclick="()=>editCustomer(data.CustomerId)">แก้ไขข้อมูลส่วนตัว</MudButton>
                                                    <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.PostAdd" Size="Size.Large" Color="Color.Error" @onclick="()=>addContract(data.CustomerId,b_id)">เพิ่มสัญญา</MudButton>

                                                </MudStack>
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="col-12">
                                    <MudPaper Class="pa-4">
                                        <MudStack Spacing="2">
                                            <MudButton OnClick="() => OnExpandCollapseClick(data.CustomerId)" Variant="Variant.Filled" Style="@buttoncollape">
                                                @if (_expandedStates[data.CustomerId])
                                                {
                                                    <MudText Typo="Typo.body1">รายการสัญญาที่ทำ <MudIcon Icon="@Icons.Material.Filled.KeyboardArrowDown" Style="@buttoncollape" /></MudText>
                                                }
                                                else
                                                {
                                                    <MudText Typo="Typo.body1">รายการสัญญาที่ทำ <MudIcon Icon="@Icons.Material.Filled.KeyboardArrowUp" Style="@buttoncollape" /></MudText>

                                                }


                                            </MudButton>

                                            <MudDivider />
                                            <MudCollapse Expanded="true">
                                                <div class="table-responsive">
                                                    <table class="table">
                                                        <thead>
                                                            <tr>
                                                                <th scope="col">ว/ด/ป</th>
                                                                <th scope="col">ประเภท</th>
                                                                <th scope="col">อ้างอิง</th>
                                                                <th scope="col">หลักประกัน</th>
                                                                <th scope="col">เลขที่สัญญา</th>
                                                                <th scope="col">เงินต้น</th>
                                                                <th scope="col">งวดละ</th>
                                                                <th scope="col">สาขา</th>
                                                                <th></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @if (lst_Promises.Count() != 0)
                                                            {
                                                                @foreach (var items in lst_Promises)
                                                                {
                                                                    <tr>

                                                                        <td>@items.Tdate</td>
                                                                        @if (items.ContractType == 1)
                                                                        {
                                                                            <td>ค่าประกันหนี้</td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td>สัญญาไฟแนนท์</td>
                                                                        }
                                                                        <td>@items.Refcode</td>
                                                                        <td>@items.Product.Name</td>
                                                                        <td>@items.Promiseno</td>
                                                                        <td>@items.Capital.Value.ToString("N0")</td>
                                                                        <td>@items.Amount.Value.ToString("N0")</td>
                                                                        <td>@items.Branch.BranchName</td>

                                                                        <td class="text-end">
                                                                            <MudStack Row="true" Class="mt-2">
                                                                                <div class="btn-group" role="group">
                                                                                    <button id="contractdropdown" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                                                        ข้อมูลสัญญา
                                                                                    </button>
                                                                                    <ul class="dropdown-menu" aria-labelledby="contractdropdown">
                                                                                        <li><a style="cursor:pointer;" class="dropdown-item" @onclick="()=>viewContract( items.CustomerId,items.Id,items.BranchId)">ดูข้อมูลสัญญา</a></li>
                                                                                        <li><a style="cursor:pointer;" class="dropdown-item" @onclick="()=>printContract(items.Id)">พิมพ์สัญญา</a></li>
                                                                                        <li><a style="cursor:pointer; background-color:red; color:#fff;" class="dropdown-item" @onclick="()=>deleteContract(items.Id)">ลบสัญญา</a></li>
                                                                                    </ul>
                                                                                </div>

                                                                                <div class="btn-group" role="group">
                                                                                    <button id="paymentdropdown" type="button" style="@buttoncolor1" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                                                                        ชำระค่างวด
                                                                                    </button>
                                                                                    <ul class="dropdown-menu" aria-labelledby="paymentdropdown">
                                                                                        <li><a style="cursor:pointer;" class="dropdown-item" @onclick="()=>goPayment(items.CustomerId,items.Id,items.BranchId)">ชำระค่างวด</a></li>
                                                                                        <li><a style="cursor:pointer;" class="dropdown-item" @onclick="()=>printPaymentDetail(items.Id)">พิมพ์รายละเอียด</a></li>
                                                                                        <li><a style="cursor:pointer; background-color:red; color:#fff;" class="dropdown-item" @onclick="()=>canclePayment(items.Id)">ยกเลิกใบเสร็จ</a></li>

                                                                                    </ul>
                                                                                </div>
                                                                                <MudButton Variant="Variant.Outlined" Size="Size.Large" Style="@buttoncolor2" @onclick="()=>goCustomerDept(data.CustomerId,items.Id)">หนี้อื่นๆ ยอดค้าง @items.Sum_Externalar.ToString("N0") บาท</MudButton>
                                                                                @* <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.RemoveRedEye" Color="Color.Default" @onclick="()=>viewContract( items.CustomerId,items.Id,items.BranchId)">ดูข้อมูลสัญญา</MudButton> *@
                                                                                @* <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Money" Style="@buttoncolor1" @onclick="()=>goPayment(items.CustomerId,items.Id,items.BranchId)">ชำระค่างวด</MudButton> *@



                                                                                @*        <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Remove" Color="Color.Error" @onclick="()=>deleteContract(1)">ยกเลิกสัญญา</MudButton> *@
                                                                            </MudStack>
                                                                        </td>
                                                                    </tr>
                                                                }

                                                            }
                                                           

                                                        </tbody>

                                                    </table>
                                                </div>
                                            </MudCollapse>
                                        </MudStack>
                                    </MudPaper>

                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            }
           
      </div>


    </div>
</div>






@code {
    // style
    string tableheader = "background-color:#840012; color:#ffff;";
    string headertext = "color:#840012; font-weight:600;";
    string buttoncolor1 = "background-color:#840012; color:#FFF; font-weight:600;";
    string buttoncolor2 = "background-color:#FFBF00; color:#1C2833; font-weight:600;";
    string settingbutton = "background-color:#840012; color:#FFF; font-weight:600; ";
    string buttoncollape = "background-color:#fc928c; color:#840012; font-weight:600;";
    string imporText = "color:#840012; font-weight:600;";
    string detailtext = "color:#1C2833 ; font-weight:600; font-style: italic;";
    [Parameter]
    public int b_id { get; set; }
    [Parameter]
    public int? cus_id { get; set; }

    SingSiamOffice.Models.SingsiamdbContext db = new SingSiamOffice.Models.SingsiamdbContext();

    Branch b_info = new Branch();
    List<Customer> list_customer = new List<Customer>();
    List<Customer> list_customer_show = new List<Customer>();
    Promise _promise = new Promise();
    protected override async Task OnInitializedAsync()
    {


        b_info = db.Branches.Where(s => s.IsActive == true && s.Id == b_id).FirstOrDefault();
        list_customer = db.Customers.Where(s => s.BranchId == b_id).ToList();

        if (cus_id!=null)
        {

            list_customer_show = list_customer.Where(s => s.CustomerId == cus_id).ToList();
            lst_Promises = await managements.GetPromisebyCustomerId(cus_id.Value);
            foreach (var data in lst_Promises)
            {
                data.Sum_Externalar = db.Externalars.Where(s => s.PromiseId == data.Id && s.PaidComplete == false).Sum(s => s.Aramount).Value;
            }

            StateHasChanged();
        }
        foreach (var data in list_customer)
        {
            _expandedStates[data.CustomerId] = true; // You can set initial state as desired

        }
    }

    List<int> Sections = new List<int> { 1, 2, 3 }; // Example dynamic range of sections
    Dictionary<int, bool> _expandedStates = new Dictionary<int, bool>();
    List<Externalar> list_Externalars = new List<Externalar>();

    private async void OnExpandCollapseClick(int cus_id)
    {
        _expandedStates[cus_id] = !_expandedStates[cus_id];
        lst_Promises =await managements.GetPromisebyCustomerId(cus_id);
        // Toggle the state of the clicked section
    }
    Models.Customer selectCustomer = null;
    Models.Customer _selectCustomer
    {
        get { return _selectCustomer; }
        set
        {
            if (value != null)
            {

                _selectCustomer = value;

            }
            else
            {

            }
        }
    }
    async private void fillter()
    {
        if (selectCustomer!=null)
        {
            list_customer_show.Clear();
            list_customer_show = list_customer.Where(s => s.CustomerId == selectCustomer.CustomerId).ToList();

            // foreach (var data in list_customer_show)
            // {
            //     data.Sum_Externalar = db.Externalars.Where(s => s.CustomerId == data.CustomerId && s.PaidComplete == false ).Sum(s => s.Aramount).Value;
            // }
            lst_Promises = await managements.GetPromisebyCustomerId(selectCustomer.CustomerId);
            foreach (var data in lst_Promises)
            {
                data.Sum_Externalar =   db.Externalars.Where(s => s.PromiseId == data.Id && s.PaidComplete == false ).Sum(s => s.Aramount).Value;
            }
            StateHasChanged();
        }

    }
    private bool CheckBlacklist(int cus_id)
    {
        // Check if there is at least one record with the given customer ID
        var isBlacklisted =  db.BlackLists.Where(s => s.CustomerId == cus_id).Any();

        return isBlacklisted;
    }
   
    private void reset()
    {
        selectCustomer = null;
        // b_info = db.Branches.Where(s => s.IsActive == true).FirstOrDefault();
        list_customer = db.Customers.Where(s => s.BranchId == b_id).ToList();
        list_customer_show.Clear();
        foreach (var data in list_customer)
        {
            _expandedStates[data.CustomerId] = false; // You can set initial state as desired

        }
    }
    private async Task<IEnumerable<Customer>> SearchValue(string value)
    {
        // In real life use an asynchronous function for fetching data from an api.
        await Task.Delay(5);

        // if text is null or empty, show complete list
        if (string.IsNullOrEmpty(value))
            return list_customer;
        return list_customer.Where(x => x.NatId.Contains(value, StringComparison.InvariantCultureIgnoreCase) || x.FullName.Contains(value, StringComparison.InvariantCultureIgnoreCase));
    }
}
